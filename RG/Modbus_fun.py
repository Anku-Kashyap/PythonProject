from pyModbusTCP.client import ModbusClient
from datetime import *
import couchdb
MB_W_LIST=[
501,	502,	503,	504,	505,	506,	507,	508,	509,	510,	511,	512,	51+3,
521,	522,	523,	524,	525,	526,	527,	528,	529,	530,	531,	532,	533,
541,	542,	543,	544,	545,	546,	547,	548,	549,	550,	551,	552,	553,
561,	562,	563,	564,	565,	566,	567,	568,	569,	570,	571,	572,	573,
581,	582,	583,	584,	585,	586,	587,	588,	589,	590,	591,	592,	593,
601,	602,	603,	604,	605,	606,	607,	608,	609,	610,	611,	612,	613,
621,	622,	623,	624,	625,	626,	627,	628,	629,	630,	631,	632,	633,
641,	642,	643,	644,	645,	646,	647,	648,	649,	650,	651,	652,	653,
661,	662,	663,	664,	665,	666,	667,	668,	669,	670,	671,	672,	673,
681,	682,	683,	684,	685,	686,	687,	688,	689,	690,	691,	692,	693,
701,	702,	703,	704,	705,	706,	707,	708,	709,	710,	711,	712,	713,
721,	722,	723,	724,	725,	726,	727,	728,	729,	730,	731,	732,	733,
741,	742,	743,	744,	745,	746,	747,	748,	749,	750,	751,	752,	753,
761,	762,	763,	764,	765,	766,	767,	768,	769,	770,	771,	772,	773,
781,	782,	783,	784,	785,	786,	787,	788,	789,	790,	791,	792,	793,
801,	802,	803,	804,	805,	806,	807,	808,	809,	810,	811,	812,	813,
821,	822,	823,	824,	825,	826,	827,	828,	829,	830,	831,	832,	833
]
MB_VAL=[1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        1,	13,	13,	12,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        3,	3,	3,	23,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        3,	15,	15,	12,	22,	22,	440,	440,	440,	100,	100,	100,	1,
        3,	3,	3,	23,	23,	23,	440,	440,	440,	100,	100,	100,	1,
        3,	14,	14,	13,	22,	22,	440,	440,	440,	100,	100,	100,	1,
        5,	15,	1,	10,	19,	0,	440,	440,	440,	100,	100,	100,	1,
        5,	15,	1,	10,	20,	0,	440,	440,	440,	100,	100,	100,	1,
        2,	15,	1,	23,	21,	0,	440,	440,	440,	100,	100,	100,	1,
        2,	15,	1,	23,	21,	0,	440,	440,	440,	100,	100,	100,	1,
        0,	0,	23,	21,	21,	23,	440,	440,	440,	100,	100,	100,	1,
        4,	4,	1,	22,	22,	0,	440,	440,	440,	100,	100,	100,	1
]
'NATHUAWAL DEHRADHUN SITE'
NATHUAWALA_6_Zone_3BistAttaChakki=		[1505,	1506,	1507,	1508,	1509,	1510,	1511,	1512,	1520,	1513,	1515,		1514,		507,		510,			501,	504,	502,	505,	503,	506,	1504,					1502,	1503,	1501,1522,	1523,	1524,	1525,	1526,	1527,
1530,64400	]
NATHUAWALA_1_Zone_1GujarowaliOffice=		[	1535,	1536,	1537,	1538,	1539,	1540,	1541,	1542,	1550,	1543,	1545,		1544,		527,		530,			521,	524,	522,	525,	523,	526,	1534,					1532,	1533,	1531,	1552,	1553,	1554,	1555,	1556,	1557,
1560,64401]
NATHUAWALA_3_Zone_2Khadar_1=		[	1565,	1566,	1567,	1568,	1569,	1570,	1571,	1572,	1580,	1573,	1575,		1574,		547,		550,			541,	544,	542,	545,	543,	546,	1564,					1562,	1563,	6621,1582,	1583,	1584,	1585,	1586,	1587,
1590,64402	]
NATHUAWALA_2_Zone_1GaneshVihar=		[	1595,	1596,	1597,	1598,	1599,	1600,	1601,	1602,	1610,	1603,	1605,		1604,		567,		570,			561,	564,	562,	565,	563,	566,	1594,					1592,	1593,	6531,1612,	1613,	1614,	1615,	1616,	1617,
1620,64403]
NATHUAWALA_4_Zone_2Khadar_2=		[	1625,	1626,	1627,	1628,	1629,	1630,	1631,	1632,	1640,	1633,	1635,		1634,		587,		590,			581,	584,	582,	585,	583,	586,	1624,					6622,	1623,	6621,1642,	1643,	1644,	1645,	1646,	1647,
1650,64404]
NATHUAWALA_7_MadhavVihar=		[	1655,	1656,	1657,	1658,	1659,	1660,	1661,	1662,	1670,	1663,	1665,		1664,		607,		610,			601,	604,	602,	605,	603,	606,	1654,					6652,	1653,	1501,1672,	1673,	1674,	1675,	1676,	1677,
1680,64405]
NATHUAWALA_5_Zone_2DhobalChowk=		[	1685,	1686,	1687,	1688,	1689,	1690,	1691,	1692,	1700,	1693,	1695,
                                            1694,		627,		630,			621,	624,	622,	625,	623,	626,
                                            1684,					6682,	1683,	6681,	1702,	1703,	1704,	1705,	1706,	1707,1710,64406]
'KHARAKMAF RISHIKESH SITE'
KAHRAKMAFF_1_Office=		[	1715,	1716,	1717,	1718,	1719,	1720,	1721,	1722,	1730,	1723,	1725,		1724,		647,		650,			641,	644,	642,	645,	643,	646,	1714,					1712,	1713,	1711,	1732,	1733,	1734,	1735,	1736,	1737,
1740,64407]
KAHRAKMAFF_2_GuljarFarm=		[	1745,	1746,	1747,	1748,	1749,	1750,	1751,	1752,	1760,	1753,	1755,		1754,		667,		670,			661,	664,	662,	665,	663,	666,	299,					7742,	6743,	1741,	1762,	1763,	1764,	1765,	1766,	7769,
7770,64408] #1770 to 7760
KAHRAKMAFF_4_Khadri=		[	1775,	1776,	1777,	1778,	1779,	1780,	1781,	1782,	1790,	1783,	1785,		1784,		687,		690,			681,	684,	682,	685,	683,	686,	1774,					1772,	1773,	1771,	1792,	1793,	1794,	1795,	1796,	1797,
1800,64409]#1830 to 7830
KAHRAKMAFF_3_ChopraFarm=		[	1805,	1806,	1807,	1808,	1809,	1810,	1811,	1812,	1820,	1813,	1815,		1814,		707,		710,			701,	704,	702,	705,	703,	706,	1804,					1802,	1803,	1711,	1822,	1823,	1824,	1825,	1826,	1827,
7830,64410]
'PRATITNAGAR RISHIKESH SITE'
PRATITNAGAR_1_Zone_1=		[	1835,	1836,	1837,	1838,	1839,	1840,	1841,	1842,	1850,	1843,	1845,		1844,		727,		730,			721,	724,	722,	725,	723,	726,	4043,					1832,	1833,	4042,1852,	1853,	1854,	1855,	1856,	1857,
1860,64411]
PRATITNAGAR_2_Zone_2=		[	1865,	1866,	1867,	1868,	1869,	1870,	1871,	1872,	1880,	1873,	1875,		1874,		747,		750,			741,	744,	742,	745,	743,	746,	4045,					1862,	1863,	6044,1882,	1883,	1884,	1885,	1886,	1887,
1890,64412]
PRATITNAGAR_3_Zone_3_I=		[	1895,	1896,	1897,	1898,	1899,	1900,	1901,	1902,	1910,	1903,	1905,		1904,		767,		770,			761,	764,	762,	765,	763,	766,	4041,					7892,	7893,	4040,	1912,	1913,	1914,	1915,	1916,	1917,
7902,64413]
PRATITNAGAR_4_Zone_3_II=		[	1925,	1926,	1927,	1928,	1929,	1930,	1931,	1932,	1940,	1933,	1935,		1934,		787,		790,			781,	784,	782,	785,	783,	786,	4041,					6992,	6993,	4040,	1942,	1943,	1944,	1945,	1946,	1947,
7950,64414]
PRATITNAGAR_5_Zone_4=		[	1955,	1956,	1957,	1958,	1959,	1960,	1961,	1962,	1970,	1963,	1965,		1964,		807,		810,			801,	804,	802,	805,	803,	806,	4039,					1952,	6953,	6038,	1972,	1973,	1974,	1975,	1976,	1977,
1980,64415]
PRATITNAGAR_6_Zone_5=		[	1985,	1986,	1987,	1988,	1989,	1990,	1991,	1992,	2000,	1993,	1995,		1994,		827,		830,			821,	824,	822,	825,	823,	826,	4037,					1982,	1983,	4036,	2002,	2003,	2004,	2005,	2006,	2007,
2010,64416]
Nat_Zone=[1531,1532,1534,4000,4014,4012,4002,4006,4014,1592,1501,4004,1502,1504]#4000(5000),4012(5012),4004(5004),5014(4004)
kah_Zone=[1711,1712,1714,4016,1741,4018,4020,1774,1742,1771,4022,4024,1772,1774] #
Pat_Zone=[4042,1832,4043,4026,6044,1862,4045,4028,4040,6892,4041,4026,6038,6892,4039,4032,4036,1952,4037,4034]


MB_R=[41501, 41502,	41503,	41504,	41505,	41506,	41507,	41508,	41509,	41510,	41511,	41512,	41513,	41514,	41515,	41516,	41517,	41518,	41519,	41520,	41521,
      41561,	41562,	41563,	41564,	41565,	41566,	41567,	41568,	41569,	41570,	41571,	41572,	41573,	41574,	41575,	41576,	41577,	41578,	41579,	41580,	41581,
      41591,	41592,	41593,	41594,	41595,	41596,	41597,	41598,	41599,	41600,	41601,	41602,	41603,	41604,	41605,	41606,	41607,	41608,	41609,	41610,	41611,
      46621,	46622,	41623,	41624,	41625,	41626,	41627,	41628,	41629,	41630,	41631,	41632,	41633,	41634,	41635,	41636,	41637,	41638,	41639,	41640,	41641,
      41651,	46652,	41653,	41654,	41655,	41656,	41657,	41658,	41659,	41660,	41661,	41662,	41663,	41664,	41665,	41666,	41667,	41668,	41669,	41670,	41671,
      46681,	46682,	41683,	41684,	41685,	41686,	41687,	41688,	41689,	41690,	41691,	41692,	41693,	41694,	41695,	41696,	41697,	41698,	41699,	41700,	41701,
      41711,	41712,	41713,	41714,	41715,	41716,	41717,	41718,	41719,	41720,	41721,	41722,	41723,	41724,	41725,	41726,	41727,	41728,	41729,	41730,	41731,
      41741,	41742,	46743,	41744,	41745,	41746,	41747,	41748,	41749,	41750,	41751,	41752,	41753,	41754,	41755,	41756,	41757,	41758,	41759,	41760,	41761,
      41771,	41772,	41773,	41774,	41775,	41776,	41777,	41778,	41779,	41780,	41781,	41782,	41783,	41784,	41785,	41786,	41787,	41788,	41789,	41790,	41791,
      46801,	41802,	41803,	41804,	41805,	41806,	41807,	41808,	41809,	41810,	41811,	41812,	41813,	41814,	41815,	41816,	41817,	41818,	41819,	41820,	41821,
      41831,	41832,	41833,	41834,	41835,	41836,	41837,	41838,	41839,	41840,	41841,	41842,	41843,	41844,	41845,	41846,	41847,	41848,	41849,	41850,	41851,
      41861,	41862,	41863,	41864,	41865,	41866,	41867,	41868,	41869,	41870,	41871,	41872,	41873,	41874,	41875,	41876,	41877,	41878,	41879,	41880,	41881,
      41891,	46892,	41893,	41894,	41895,	41896,	41897,	41898,	41899,	41900,	41901,	41902,	41903,	41904,	41905,	41906,	41907,	41908,	41909,	41910,	41911,
      41921,	46922,	46923,	41924,	41925,	41926,	41927,	41928,	41929,	41930,	41931,	41932,	41933,	41934,	41935,	41936,	41937,	41938,	41939,	41940,	41941,
      46038,	41952,	46953,	41954,	41955,	41956,	41957,	41958,	41959,	41960,	41961,	41962,	41963,	41964,	41965,	41966,	41967,	41968,	41969,	41970,	41971,
      41981,	41982,	41983,	41984,	41985,	41986,	41987,	41988,	41989,	41990,	41991,	41992,	41993,	41994,	41995,	41996,	41997,	41998,	41999,	42000,	42001
]


SERVER_HOST = '192.168.1.14'
SERVER_PORT = 1502

# Create a Modbus TCP client
client = ModbusClient()

# Set the Modbus server host and port
client.host = SERVER_HOST
client.port = SERVER_PORT


def MB_WRITE():
    for i in range(221):
        Reg = MB_W_LIST[i]
        Reg = Reg - 1
        wr = client.write_single_register(Reg, MB_VAL[i])
        value = client.read_holding_registers(Reg, 1)
        # time.sleep(0.5)

        if i == 220:
            print('Val_writeen__To_Reg')


def MB_Couch(NAME,DB,ID):
        server = couchdb.Server('http://Admin:War_ship_84@192.168.1.14:5984/')
        doc_id = ID
        db=server[DB]
        doc = db[doc_id]

        Val = []
        now = datetime.now()
        today = date.today()
        today = str(today)
        time = now.strftime("%H:%M:%S")
        for Reg in NAME:
            value = client.read_holding_registers(Reg - 1, 1)
            

            if value:
                """
                """
                if value[0] > 65300 and value[0] < 67000:
                    data = 0
                else:
                    data = (value[0])
                Val.append(data)
        if Val[7] == 1:
            Val[7] = 0.95
        else:
            Val[7] = Val[7]
        if Val[10] > 0:
            Val[10] = 'Auto'
        elif Val[10] == 0 and Val[0] > 0 and Val[1] > 0 and Val[2] > 0:
            Val[10] = 'Manual'
        else:
            Val[10] = 'POWER FAIL'
        if Val[11] > 0:
            Val[11] = 'RUNNING'
        else:
            Val[11] = 'STOP'

        doc['tag0'] = Val[0],
        doc['R VOLT'] = Val[0],
        doc['tag1'] = Val[1],
        doc['Y_VOlt'] = Val[1]
        doc['tag2'] = Val[2],
        doc['B_VOlt'] = Val[2]

        doc['tag6'] = round(Val[6] / 10, 2),
        doc['Freq'] = round(Val[6] / 10, 2),

        if Val[11]=='RUNNING':

            doc['tag3'] = Val[3],
            doc['R-Amps'] = Val[3]
            doc['tag4'] = Val[4],
            doc['Y-Amps'] = Val[4]
            doc['tag5'] = Val[5],
            doc['B-Amps'] = Val[5]
            doc['tag7'] = Val[7] / 100,
            Pwr_fac=(Val[7] / 100),
            doc['Pwr_Fac'] = Val[7] / 100,
            Avg_Current = ((float(Val[4]) + float(Val[5]) + float(Val[3])) / 3)
            Avg_Volt = ((float(Val[0]) + float(Val[1]) + float(Val[2])) / 3)
            KW = (Avg_Volt * Avg_Current * Pwr_fac[0] * 1.732) / 1000


            doc['tag8'] = round(KW,2),
            doc['tag30'] = Val[21] / 100,

            doc['Inlet_Press'] = Val[21] / 100,
            doc['tag31'] = Val[22] / 10,
            doc['Inlet_Flow'] = Val[22] / 10,
        else:
            doc['tag7'] = 0,
            doc['KW']=0,
            doc['tag8'] = 0,
            doc['tag3'] = 0,
            doc['R-Amps'] = 0,
            doc['tag4'] = 0,
            doc['Y-Amps'] =0,
            doc['tag5'] = 0,
            doc['B-Amps'] = 0,
            doc['Inlet_Press'] = 0,
            doc['tag30'] =0,
            doc['tag31'] = 0,
            doc['Inlet_Flow'] = 0,



        doc['tag9'] = Val[31],
        doc['KWH'] = Val[31],
        doc['tag10'] = Val[10],
        doc['Oper_Mode'] = Val[10],
        doc['tag11'] = (Val[27], " H ", Val[26], " M ",),
        doc['Power_On_Hrs'] = (Val[27], " H ", Val[26], " M ",),
        doc['tag12'] = Val[11],
        doc['Status'] = Val[11],
        doc['tag13'] = (Val[25], " H ", Val[24], " M "),
        doc['Pump_on_Hrs'] = (Val[25], " H ", Val[24], " M "),
        doc['tag14'] = Val[12],
        doc['Max_Volt'] = Val[12],
        doc['tag15'] = 350,
        doc['Min_Volt'] = 350,
        doc['tag16'] = Val[13],
        doc['Max_Cur'] = Val[13],
        doc['tag17'] = 50,
        doc['Min_Cur'] = 50,
        doc['tag18'] = 25,
        doc['Unblance_Current'] = 25,
        doc['tag19'] = Val[14],
        doc['1st_On_Time'] = Val[14],
        doc['tag20'] = Val[15],
        doc['1st_Off_Time'] = Val[15],
        doc['tag21'] = Val[16],
        doc['2nd_On_Time'] = Val[16],
        doc['tag22'] = Val[17],
        doc['2nd_Off_Time'] = Val[17],
        doc['tag23'] = Val[18],
        doc['3rd_On_Time'] = Val[18],
        doc['tag24'] = Val[19],
        doc['3rd_Off_Time'] = Val[19],
        doc['tag25'] = Val[22] / 10,
        doc['Pump_Dis'] = Val[22] / 10,
        a = (Val[22] * Val[25])/10
        doc['tag26'] = round(a),
        doc['Pump_Dis_tot'] = round(Val[28] * 0.01, 2),
        doc['tag27'] = Val[20] / 10,
        doc['Tank_Dis'] = Val[20] / 10,

        doc['tag28'] =round(a),
        doc['Tank_Dis_Tot'] = round(Val[29] * 0.01, 2),
        doc['tag29'] = 0,
        doc['Event'] = 0,
        doc['tag32'] = Val[23] / 100,
        doc['Level'] = Val[23] / 100,
        doc['tag33'] = today,
        doc['Date'] = today,
        doc['tag34'] = time,
        doc['Time'] = time,
        doc['tag35'] = Val[30]/100,
        doc['Ground_Water_Level'] = Val[30]/100,

        print('Upper_head ',Val[21] / 100)



        db.save(doc)









def NAT_Zone_MB_Couch(NAME, DB, ID):
    server = couchdb.Server('http://Admin:War_ship_84@192.168.1.14:5984/')
    doc_id = ID
    db = server[DB]
    doc = db[doc_id]
    Val = []
    Val = []


    now = datetime.now()
    today = date.today()
    today = str(today)
    time = now.strftime("%H:%M:%S")
    for Reg in NAME:
        value = client.read_holding_registers(Reg-1, 1)
        
        if value:
            
            if value[0] > 65300 and value[0] < 67000:
                data = 0
            else:
                data = (value[0])
            Val.append(data)
    doc['tag0'] = Val[0] / 100,

    doc['tag1'] = Val[1] / 100,
    doc['tag2'] = Val[2] / 10,
    doc['tag3'] = Val[3] / 100,
    doc['tag4'] = Val[4] / 100,
    doc['tag5'] = Val[5] / 100,
    doc['tag6'] = Val[6] / 100,
    doc['tag7'] = Val[7] / 100,
    doc['tag8'] = Val[8] / 10,
    doc['tag9'] = Val[9] / 100,
    doc['tag10'] = Val[10] / 100,
    doc['tag11'] = Val[11] / 100,
    doc['tag12'] = Val[13] / 10,
    doc['tag13'] = Val[12] / 100,
    doc['tag34'] = today
    doc['tag15'] = time
    db.save(doc)
    print("\n")

    client.close()



def KAH_Zone_MB_Couch(NAME, DB, ID):
    server = couchdb.Server('http://Admin:War_ship_84@192.168.1.14:5984/')
    doc_id = ID
    db = server[DB]
    doc = db[doc_id]
    Val = []
    now = datetime.now()
    today = date.today()
    today = str(today)
    time = now.strftime("%H:%M:%S")
    for Reg in NAME:
        value = client.read_holding_registers(Reg - 1, 1)

        if value:
            """"""
            if value[0] > 65300 and value[0] < 67000:
                data = 0
            else:
                data = (value[0])
            Val.append(data)

    doc['tag0'] = Val[0] / 100,
    doc['tag1'] = Val[1] / 100,
    doc['tag2'] = Val[2] / 10,
    doc['tag3'] = Val[3] / 100,
    doc['tag4'] = Val[4] / 100,
    if Val[5] == 0:
        Val[5] = 120
    doc['tag5'] = Val[5] / 100,
    doc['tag6'] = Val[6] / 100,
    doc['tag7'] = Val[7] / 10,
    doc['tag8'] = Val[8] / 100,
    doc['tag9'] = Val[9] / 100,
    doc['tag10'] = Val[10] / 100,
    doc['tag11'] = Val[11] / 100,
    doc['tag12'] = Val[13] / 10,
    doc['tag13'] = Val[12] / 100,
    doc['tag14'] = today
    doc['tag15'] = time
    db.save(doc)
    print("\n")
    client.close()


def PAT_Zone_MB_Couch(NAME, DB, ID):
    server = couchdb.Server('http://Admin:War_ship_84@192.168.1.14:5984/')
    doc_id = ID
    db = server[DB]
    doc = db[doc_id]
    Val = []
    now = datetime.now()
    today = date.today()
    today = str(today)
    time = now.strftime("%H:%M:%S")

    for Reg in NAME:
        value = client.read_holding_registers(Reg - 1, 1)

        if value:
            """"""
            if value[0] > 65300 and value[0] < 67000:
                data = 0

            else:
                data = (value[0])
        Val.append(data)
    doc['tag0'] = Val[0] / 100,
    doc['tag1'] = Val[1] / 100,
    doc['tag2'] = Val[2] / 10,
    doc['tag3'] = Val[3] / 100,
    doc['tag4'] = Val[4] / 100,
    doc['tag5'] = Val[5] / 100,
    doc['tag6'] = Val[6] / 10,
    doc['tag7'] = Val[7] / 100,
    doc['tag8'] = Val[8] / 100,
    doc['tag9'] = Val[9] / 100,
    doc['tag10'] = Val[10] / 10,
    doc['tag11'] = Val[11] / 100,
    doc['tag12'] = Val[12] / 100,
    doc['tag13'] = Val[13] / 100,
    doc['tag14'] = Val[14] / 10,
    doc['tag15'] = Val[15] / 100,
    doc['tag16'] = Val[16] / 100,
    doc['tag17'] = Val[17] / 100,
    doc['tag18'] = Val[18] / 10,
    doc['tag19'] = Val[19] / 100,
    doc['tag34'] = today
    doc['tag35'] = time
    db.save(doc)
    print("\n")
    client.close()


